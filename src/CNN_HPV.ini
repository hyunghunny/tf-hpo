[Execution]
CREATED = by hand as a basic template
EARLY_STOP_CHECK_EPOCHS = 1

[Hyperparameters]
# LeNet-5 like model hyperparameters
FILTER_SIZE = 5
CONV1_DEPTH = 32
CONV2_DEPTH = 64
FC1_WIDTH = 512
NUM_POOLING = 2
POOLING_SIZE = 2
STRIDE_SIZE = 2

# Training hyperparameters
NUM_EPOCHS = 20
BATCH_SIZE = 64
EVAL_BATCH_SIZE = 64

#Number of steps between evaluations.
EVAL_FREQUENCY = 100    

# initial values
INIT_WEIGHT_VALUE = 0.1
INIT_STDDEV = 0.1
# Set to None for random seed.
SEED = 66478        

# learning rate related 
OPTIMIZATION = Momentum

#XXX: If False, TypeError is raised
USE_LEARNING_RATE_DECAY = True 
BASE_LEARNING_RATE = 0.01
DECAY_RATE = 0.95

# regularization related
DROPOUT_RATE = 0.5
REGULARIZER_FACTOR = 5e-4
MOMENTUM_VALUE = 0.9

# below information contains the type of each hyperparameter. 
# this information are used for type casting
[TypeInformation]
# LeNet-5 like model hyperparameters
FILTER_SIZE = int
CONV1_DEPTH = int
CONV2_DEPTH = int
FC1_WIDTH = int
NUM_POOLING = int
POOLING_SIZE = int
STRIDE_SIZE = int

# Training hyperparameters
NUM_EPOCHS = int
BATCH_SIZE = int
EVAL_BATCH_SIZE = int

#Number of steps between evaluations.
EVAL_FREQUENCY = int    

# initial values
INIT_WEIGHT_VALUE = float
INIT_STDDEV = float
# Set to None for random seed.
SEED = int        

# learning rate related 
OPTIMIZATION = string
STATIC_LEARNING_RATE = float
USE_LEARNING_RATE_DECAY = bool 
BASE_LEARNING_RATE = float
DECAY_RATE = float

# regularization related
DROPOUT_RATE = float
REGULARIZER_FACTOR = float
MOMENTUM_VALUE = float

# For training control
VALIDATION = bool
EARLY_STOP_CHECK_EPOCHS = int

